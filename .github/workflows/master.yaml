name: Deploy Production

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  
  allow-ssh:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 

      - name: Allow SSH from any IP
        run: |

          SECURITY_GROUP_ID="sg-0f966a7c7341b7cfc"
          
          aws ec2 authorize-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr 0.0.0.0/0

  build:
    runs-on: ubuntu-latest
    needs: [allow-ssh]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ./docker/app.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/career-docs-api:latest

  deploy:
    name: Deploy to Server (AWS EC2)
    runs-on: ubuntu-latest  
    needs: [build]

    steps:
      - name: Deploy to Cloud Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_AWS_SSH_HOST }}
          username: ${{ secrets.PRODUCTION_AWS_SSH_USERNAME }}
          key: ${{ secrets.PRODUCTION_AWS_SSH_SECRET}}
          script: |
            echo "Login to Docker Hub"
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            echo "Pull new image"
            sudo docker-compose -f /home/${{ secrets.PRODUCTION_AWS_SSH_USERNAME }}/docker-compose.yaml pull

            echo "Restart the container"
            sudo docker-compose -f /home/${{ secrets.PRODUCTION_AWS_SSH_USERNAME }}/docker-compose.yaml --env-file /home/${{ secrets.PRODUCTION_AWS_SSH_USERNAME }}/.env up --force-recreate --build --no-deps -d

            echo "Delete old image"
            sudo docker image prune -f

  revoke-ssh:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 

      - name: Revoke SSH from any IP
        run: |

          SECURITY_GROUP_ID="sg-0f966a7c7341b7cfc"
          
          aws ec2 revoke-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr 0.0.0.0/0
