name: Deploy Production

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ./docker/app.dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/career-docs-api:latest

  deploy:
    name: Deploy to Server (AWS EC2)
    runs-on: ubuntu-latest  
    needs: [build]

    steps:
      - name: Deploy to Cloud Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_AWS_SSH_HOST }}
          username: ${{ secrets.PRODUCTION_AWS_SSH_USERNAME }}
          key: ${{ secrets.PRODUCTION_AWS_SSH_SECRET}}
          script: |
            echo "Checking and installing Docker if necessary"
            if ! command -v docker &> /dev/null
            then
              echo "Docker not found. Installing..."
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo groupadd docker
              sudo usermod -aG docker $USER
              newgrp docker
            else
              echo "Docker is already installed"
            fi

            echo "Checking and installing Docker Compose if necessary"
            if ! command -v docker-compose &> /dev/null
            then
              echo "Docker Compose not found. Installing..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            else
              echo "Docker Compose is already installed"
            fi

            echo "Login to Docker Hub"
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            echo "Pull new image"
            docker-compose -f /home/${{ secrets.PRODUCTION_AWS_SSH_USERNAME }}/docker-compose.yml pull

            echo "Restart the container"
            docker-compose -f /home/${{ secrets.PRODUCTION_AWS_SSH_USERNAME }}/docker-compose.yml --env-file /home/${{ secrets.PRODUCTION_AWS_SSH_USERNAME }}/.env up --force-recreate --build --no-deps -d

            echo "Delete old image"
            docker image prune -f
